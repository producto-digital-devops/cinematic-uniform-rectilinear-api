trigger:
- none

variables:
  iacFolder: 'terraform'
  vmImage: 'ubuntu-latest'
  pythonVersion: '3.7'

stages:
- stage: Build
  jobs:
  - job: Build
    displayName: 'Agent Job Build'
    pool:
      vmImage: '$(vmImage)'
    steps:
    - task: UsePythonVersion@0
      displayName: 'Setting python version to 3.7 as required by functions'
      inputs:
        versionSpec: '$(pythonVersion)'
        architecture: 'x64'
    - bash: |
        if [ -f extensions.csproj ]
        then
            dotnet build extensions.csproj --output ./bin
        fi
        pip install --target="./.python_packages/lib/site-packages" -r ./requirements.txt
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveFile: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish .zip file'
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
        artifactName: 'drop'
    - task: CopyFiles@2
      displayName: 'Copy Files to /$(iacFolder)'
      inputs:
        SourceFolder: '$(iacFolder)'
        Contents: '**'
        TargetFolder: '$(build.artifactstagingdirectory)/$(iacFolder)'
        CleanTargetFolder: true
    - task: PublishBuildArtifacts@1
      displayName: 'Publish terraform folder'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)/$(iacFolder)'
        artifactName: 'drop/$(iacFolder)'